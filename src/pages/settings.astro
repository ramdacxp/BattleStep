---
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";
import Layout from "../layouts/Layout.astro";
---

<Layout title="Welcome to BattleStep">
  <Header title="Settings" />

  <main class="m-4">
    <h1>Local Data & Sync</h1>
    <p>
      By default, BattleStep stores all data locally, using a web browser
      feature called <i>Local Storage</i>. Your data is <i>not</i> sent back to the
      web server and therefore <i>not synced</i> between different browsers or saved
      on any other location.
    </p>
    <p>
      You can <i>opt-in</i> to sync your data by setting up a <i>sync-token</i>.
      All browsers with the same token will keep their data in sync. Here your
      data will be sent to our webserver and stored in a database. <b
        >Keep your sync-token secret!</b
      > Anybody with access to it can read and change your data.
    </p>
    <h2>Name</h2>
    <p>
      You can set a name here (no real name required) and BattleStep will greet
      you with it. Will use "You" if no name is set.
    </p>
    <div class="flex gap-2">
      <input type="text" id="settingName" placeholder="Your Name" />
      <button id="settingNameUpdate" class="btn btn-default">Update</button>
      <button id="settingNameClear" class="btn btn-danger">Clear</button>
    </div>
  </main>

  <Footer />
</Layout>

<script>
  import { DataStore } from "../scripts/DataStore";
  import { FormHelper } from "../scripts/FormHelper";

  const ds = new DataStore();
  const elName = new FormHelper("settingName");
  elName.set(ds.getName() ?? "");

  new FormHelper("settingNameUpdate").click(() => {
    ds.setName(elName.get());
  });

  new FormHelper("settingNameClear").click(() => {
    ds.clearName();
    elName.set("");
  });
</script>
